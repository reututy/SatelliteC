<UserControl x:Class="Presentation.EPSTab"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:Presentation"
             mc:Ignorable="d">
    <UserControl.Resources>

        <local:HeatBorderConverter x:Key="HeatBorderConverter" />
        <local:ChannelLightConverter x:Key="ChannelLightConverter" />
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="14" />
            <Setter Property="Background" Value="LightSkyBlue"/>
            <Setter Property="BorderBrush" Value="White"/>
        </Style>
        <Style x:Key="myCurrentStyle" TargetType="TextBlock">
            <Setter Property="Foreground" Value="Red" />
        </Style>
        <Style TargetType="TextBlock">
            <Setter Property="TextAlignment" Value="Center" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.Background>
            <ImageBrush ImageSource="Images/cubesat.jpg"/>
        </Grid.Background>
        <DockPanel x:Name="menuPanel" HorizontalAlignment="Left" LastChildFill="False" VerticalAlignment="Top" Margin="0,0,-0.4,0" Visibility="Hidden" d:IsHidden="True" Grid.RowSpan="2">
            <DockPanel.Background>
                <ImageBrush ImageSource="Images/cubesat.jpg"/>
            </DockPanel.Background>
            <Image Margin="0,0,0,-108" Source="Images/cubesat.jpg" Stretch="Fill">
                <Image.OpacityMask>
                    <ImageBrush ImageSource="Images/cubesat.jpg"/>
                </Image.OpacityMask>
            </Image>
        </DockPanel>

        <Button x:Name="chargeDischargeButton" Content="Charge" Foreground="White" Background="Green" FontSize="18" HorizontalAlignment="Left" Margin="70,607,0,0" VerticalAlignment="Top" Width="122" Height="43" Click="ChargeButton_Click"/>
        <Label Content="Battery" FontWeight="Bold" FontSize="20" Foreground="White" HorizontalAlignment="Left" Margin="509,18,0,0" VerticalAlignment="Top" Width="105" Height="41"/>
        <Grid x:Name="batteryGrid" HorizontalAlignment="Left" Background="White" Height="78" Margin="509,64,0,0" VerticalAlignment="Top" Width="181">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="battVoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Vbat, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
            <Label Content="Temperture:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="battTempText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=Temperture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} degC}"/>
            <Label Content="Battery State:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="battStateText" Grid.Row="2" Grid.Column="1" Text="{Binding BattState, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <TextBlock x:Name="battCurrInText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="50" Margin="454,95,0,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding Path=CurrentIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mA}" />
        <TextBlock x:Name="battCurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="67" Margin="690,95,0,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding Path=CurrentOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mA}" RenderTransformOrigin="0.344,0.63" />
        <Grid x:Name="batteryHeaterGrid" HorizontalAlignment="Left" Background="White" Height="79" Margin="509,259,0,0" VerticalAlignment="Top" Width="181">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Mode:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="heaterModeText" Grid.Row="0" Grid.Column="1" Text="{Binding BattheaterMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="Heater low [degC]:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="heatLowText" Grid.Row="2" Grid.Column="1" Text="{Binding BattheaterLow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Heater high [degC]:" Grid.Row="3" Grid.Column="0"/>
            <TextBlock x:Name="heatHighText" Grid.Row="3" Grid.Column="1" Text="{Binding BattheaterHigh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>

        <Label Content="Photovolatic Converters" FontSize="20" FontWeight="Bold" Foreground="White" HorizontalAlignment="Left" Margin="196,18,0,0" VerticalAlignment="Top" Width="274" Height="60"/>
        <Grid x:Name="pv1Grid" HorizontalAlignment="Left" Background="White" Height="80" Margin="196,80,0,0" VerticalAlignment="Top" Width="181">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="pv1VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
            <Label Content="Temperture:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="pv1TempText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=Temperture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} degC}"/>
            <Label Content="Vboost:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="pv1VboostText" Grid.Row="2" Grid.Column="1" Text="{Binding Vboost[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
        </Grid>
        <TextBlock x:Name="pv1CurrInText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="50" Margin="143,95,0,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding Path=CurrentIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mA}" />
        <TextBlock x:Name="pv1CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="50" Margin="385,95,0,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding Path=CurrentOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mA}"/>
        <Grid x:Name="pv2Grid" HorizontalAlignment="Left" Background="White" Height="79" Margin="196,197,0,0" VerticalAlignment="Top" Width="181">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="pv2VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
            <Label Content="Temperture:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="pv2TempText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=Temperture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} degC}"/>
            <Label Content="Vboost:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="pv2VboostText" Grid.Row="2" Grid.Column="1" Text="{Binding Vboost[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
        </Grid>
        <TextBlock x:Name="pv2CurrInText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="50" Margin="143,207,0,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding Path=CurrentIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mA}" />
        <TextBlock x:Name="pv2CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="50" Margin="385,207,0,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding Path=CurrentOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mA}" />
        <Grid x:Name="pv3Grid" HorizontalAlignment="Left" Background="White" Height="79" Margin="196,311,0,0" VerticalAlignment="Top" Width="181">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="pv3VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
            <Label Content="Temperture:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="pv3TempText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=Temperture, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} degC}"/>
            <Label Content="Vboost:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="pv3VboostText" Grid.Row="2" Grid.Column="1" Text="{Binding Vboost[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
        </Grid>
        <TextBlock x:Name="pv3CurrInText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="50" Margin="143,323,0,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding Path=CurrentIn, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mA}" />
        <TextBlock x:Name="pv3CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="50" Margin="385,323,0,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding Path=CurrentOut, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mA}" />
        <Label Content="Battery Heater" FontWeight="Bold" FontSize="20" Foreground="White" HorizontalAlignment="Left" Margin="509,211,0,0" VerticalAlignment="Top" Width="149" Height="41"/>
        <Label Content="Channels" FontWeight="Bold" FontSize="20" Foreground="White" HorizontalAlignment="Left" Margin="1133,31,0,0" VerticalAlignment="Top" Width="105" Height="41"/>
        <Grid x:Name="confGrid" HorizontalAlignment="Left" Background="White" Margin="685,433,0,70" Width="181">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="PPT mode:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="pptModeText" Grid.Row="0" Grid.Column="1" Text="{Binding PptMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <!--<Label Content="Heater mode:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="heatModeText" Grid.Row="1" Grid.Column="1" Text="{Binding BattheaterMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <<Label Content="Heater low [degC]:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="heatLowText" Grid.Row="2" Grid.Column="1" Text="{Binding BattheaterLow, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Heater high [degC]:" Grid.Row="3" Grid.Column="0"/>
            <TextBlock x:Name="heatHighText" Grid.Row="3" Grid.Column="1" Text="{Binding BattheaterHigh, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>-->
            <!--<Label Content="Normal output:" Grid.Row="1" Grid.Column="0"/>
            <Grid x:Name="normalOutGrid" Grid.Row="1" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding OutputNormalValue[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} }"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding OutputNormalValue[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} }"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding OutputNormalValue[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} }"/>
                <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding OutputNormalValue[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} }"/>
                <TextBlock Grid.Row="0" Grid.Column="4" Text="{Binding OutputNormalValue[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} }"/>
                <TextBlock Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[5], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} }"/>
                <TextBlock Grid.Row="0" Grid.Column="6" Text="{Binding OutputNormalValue[6], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} }"/>
                <TextBlock Grid.Row="0" Grid.Column="7" Text="{Binding OutputNormalValue[7], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} }"/>
            </Grid>
            <Label Content="Safe output:" Grid.Row="2" Grid.Column="0"/>
            <Grid x:Name="safeOutGrid" Grid.Row="2" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding OutputSafeValue[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding OutputSafeValue[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding OutputSafeValue[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding OutputSafeValue[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="4" Text="{Binding OutputSafeValue[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="5" Text="{Binding OutputSafeValue[5], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="6" Text="{Binding OutputSafeValue[6], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="7" Text="{Binding OutputSafeValue[7], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>-->
            <!--<Label Content="On delays [sec]:" Grid.Row="3" Grid.Column="0"/>
            <Grid x:Name="onDelaysGrid" Grid.Row="3" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding OutputInitialOnDelay[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding OutputInitialOnDelay[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding OutputInitialOnDelay[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="4" Text="{Binding OutputInitialOnDelay[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="5" Text="{Binding OutputInitialOnDelay[5], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="6" Text="{Binding OutputInitialOnDelay[6], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="7" Text="{Binding OutputInitialOnDelay[7], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
            <Label Content="Off delays [sec]:" Grid.Row="4" Grid.Column="0"/>
            <Grid x:Name="offDelaysGrid" Grid.Row="4" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding OutputInitialOffDelay[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding OutputInitialOffDelay[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding OutputInitialOffDelay[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOffDelay[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="4" Text="{Binding OutputInitialOffDelay[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="5" Text="{Binding OutputInitialOffDelay[5], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="6" Text="{Binding OutputInitialOffDelay[6], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="7" Text="{Binding OutputInitialOffDelay[7], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>-->
            <!--<Label Content="Vboost [mV]:" Grid.Row="8" Grid.Column="0"/>
            <Grid x:Name="vboostGrid" Grid.Row="8" Grid.Column="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <TextBlock Grid.Row="0" Grid.Column="0" Text="{Binding Vboost[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Vboost[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <TextBlock Grid.Row="0" Grid.Column="2" Text="{Binding Vboost[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>-->
            <Label Content="Max voltage [mV]:" Grid.Row="5" Grid.Column="0"/>
            <TextBlock x:Name="maxVoltText" Grid.Row="5" Grid.Column="1" Text="{Binding BattMaxVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Safe voltage [mV]:" Grid.Row="6" Grid.Column="0"/>
            <TextBlock x:Name="safeVoltText" Grid.Row="6" Grid.Column="1" Text="{Binding BattSafeVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Critical voltage [mV]:" Grid.Row="7" Grid.Column="0"/>
            <TextBlock x:Name="criticalVoltText" Grid.Row="7" Grid.Column="1" Text="{Binding BattCriticalVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Normal voltage [mV]:" Grid.Row="8" Grid.Column="0"/>
            <TextBlock x:Name="normalVoltText" Grid.Row="8" Grid.Column="1" Text="{Binding BattNormalVoltage, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Last reset:" Grid.Row="9" Grid.Column="0"/>
            <TextBlock x:Name="lastResetText" Grid.Row="9" Grid.Column="1" Text="{Binding LastResetCause, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="#Reboots:" Grid.Row="10" Grid.Column="0"/>
            <TextBlock x:Name="numRebootText" Grid.Row="10" Grid.Column="1" Text="{Binding RebootCount, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="#Errors:" Grid.Row="11" Grid.Column="0"/>
            <TextBlock x:Name="numErrorsText" Grid.Row="11" Grid.Column="1" Text="{Binding SwErrors, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Label Content="More Info" FontWeight="Bold" FontSize="20" Foreground="White" HorizontalAlignment="Left" Margin="685,394,0,0" VerticalAlignment="Top" Width="140" Height="41"/>
        <Grid x:Name="wdtI2CGrid" HorizontalAlignment="Left" Background="White" Height="82" Margin="294,486,0,0" VerticalAlignment="Top" Width="149">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Type:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="i2cTypeText" Grid.Row="0" Grid.Column="1" Text="{Binding WdtType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="#Reboot:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="i2cRebootText" Grid.Row="1" Grid.Column="1" Text="{Binding RebootCounter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Time left [sec]:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="i2cTimeText" Grid.Row="2" Grid.Column="1" Text="{Binding TimeLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Label Content="WDTs" FontWeight="Bold" FontSize="20" Foreground="White" HorizontalAlignment="Left" Margin="294,433,0,0" VerticalAlignment="Top" Width="149" Height="41"/>
        <Grid x:Name="wdtGNDGrid" HorizontalAlignment="Left" Background="White" Height="82" Margin="472,486,0,0" VerticalAlignment="Top" Width="149">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Type:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="gndTypeText" Grid.Row="0" Grid.Column="1" Text="{Binding WdtType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="#Reboot:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="gndRebootText" Grid.Row="1" Grid.Column="1" Text="{Binding RebootCounter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Time left [sec]:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="gndTimeText" Grid.Row="2" Grid.Column="1" Text="{Binding TimeLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Grid x:Name="wdtCSP1Grid" HorizontalAlignment="Left" Background="White" Height="104" Margin="472,590,0,0" VerticalAlignment="Top" Width="149">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Type:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="csp1TypeText" Grid.Row="0" Grid.Column="1" Text="{Binding WdtType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="#Reboot:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="csp1RebootText" Grid.Row="1" Grid.Column="1" Text="{Binding RebootCounter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="#Ping left:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="csp1PingText" Grid.Row="2" Grid.Column="1" Text="{Binding PingLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Time to ping [sec]:" Grid.Row="3" Grid.Column="0"/>
            <TextBlock x:Name="csp1TimeText" Grid.Row="3" Grid.Column="1" Text="{Binding TimeLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Grid x:Name="wdtCSP0Grid" HorizontalAlignment="Left" Background="White" Height="104" Margin="294,590,0,0" VerticalAlignment="Top" Width="149">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>
            <Label Content="Type:" Grid.Row="0" Grid.Column="0"/>
            <TextBlock x:Name="csp0TypeText" Grid.Row="0" Grid.Column="1" Text="{Binding WdtType, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
            <Label Content="#Reboot:" Grid.Row="1" Grid.Column="0"/>
            <TextBlock x:Name="csp0RebootText" Grid.Row="1" Grid.Column="1" Text="{Binding RebootCounter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="#Ping left:" Grid.Row="2" Grid.Column="0"/>
            <TextBlock x:Name="csp0pingText" Grid.Row="2" Grid.Column="1" Text="{Binding PingLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            <Label Content="Time to ping [sec]:" Grid.Row="3" Grid.Column="0"/>
            <TextBlock x:Name="csp0TimeText" Grid.Row="3" Grid.Column="1" Text="{Binding TimeLeft, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <Button x:Name="pauseButton" Content="Pause" Foreground="White" Background="Orange" FontSize="18" HorizontalAlignment="Left" Margin="70,490,0,0" VerticalAlignment="Top" Width="122" Height="43" Click="PauseButton_Click"/>
        <Image x:Name="sunmoon1Pic" HorizontalAlignment="Left" Height="68" Margin="3,47,0,0" VerticalAlignment="Top" Width="66" Source="Images/moon.png"/>
        <Image HorizontalAlignment="Left" Height="64" Margin="53,58,0,0" VerticalAlignment="Top" Width="98" Source="Images/solar_panel.png" RenderTransformOrigin="0.429,0.493"/>
        <Button x:Name="panel1Button" Content="ON" HorizontalAlignment="Left" Margin="10,132,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Panel1Button_Click"/>

        <Image x:Name="sunmoon2Pic" HorizontalAlignment="Left" Height="68" Margin="3,177,0,0" VerticalAlignment="Top" Width="66" Source="Images/moon.png"/>
        <Image HorizontalAlignment="Left" Height="64" Margin="53,181,0,0" VerticalAlignment="Top" Width="98" Source="Images/solar_panel.png" RenderTransformOrigin="0.429,0.493"/>
        <Button x:Name="panel2Button" Content="ON" HorizontalAlignment="Left" Margin="10,253,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Panel2Button_Click"/>
        <Image x:Name="sunmoon3Pic" HorizontalAlignment="Left" Height="68" Margin="5,295,0,0" VerticalAlignment="Top" Width="66" Source="Images/moon.png"/>
        <Image HorizontalAlignment="Left" Height="64" Margin="55,299,0,0" VerticalAlignment="Top" Width="98" Source="Images/solar_panel.png" RenderTransformOrigin="0.429,0.493"/>
        <Button x:Name="panel3Button" Content="ON" HorizontalAlignment="Left" Margin="12,371,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Panel3Button_Click"/>
        <Button x:Name="battHeaterButton" Content="ON" HorizontalAlignment="Left" Margin="575,343,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="BattHeaterButton_Click"/>
        <Label Content="Kill Switch" Background="Yellow" HorizontalAlignment="Left" Margin="757,103,0,0" VerticalAlignment="Top" Height="47" Width="82"/>
        <Button x:Name="killSwitchButton" Content="OFF" HorizontalAlignment="Left" Margin="772,163,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="KillSwitchButton_Click"/>
        <Label Content="Power Conditioning&#xD;&#xA;3.3V" Background="Yellow" HorizontalAlignment="Left" Margin="927,103,0,0" VerticalAlignment="Top" Height="47" Width="120"/>
        <Label Content="Power Conditioning&#xA;5V" Background="Yellow" HorizontalAlignment="Left" Margin="927,343,0,0" VerticalAlignment="Top" Height="47" Width="120"/>
        <Button x:Name="ch1Button" Content="ON" HorizontalAlignment="Left" Margin="1202,87,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Ch1Button_Click"/>
        <Label Content="3.3V1" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="1151,84,0,0" VerticalAlignment="Top" Width="51" Height="32"/>
        <Button x:Name="ch2Button" Content="ON" HorizontalAlignment="Left" Margin="1202,168,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Ch2Button_Click" />
        <Label Content="3.3V2" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="1151,165,0,0" VerticalAlignment="Top" Width="51" Height="32"/>
        <Button x:Name="ch3Button" Content="ON" HorizontalAlignment="Left" Margin="1202,247,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Ch3Button_Click"/>
        <Label Content="3.3V3" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="1151,244,0,0" VerticalAlignment="Top" Width="51" Height="32"/>
        <Button x:Name="ch4Button" Content="ON" HorizontalAlignment="Left" Margin="1202,327,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Ch4Button_Click"/>
        <Label Content="5V1" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="1151,324,0,0" VerticalAlignment="Top" Width="51" Height="32"/>
        <Button x:Name="ch5Button" Content="ON" HorizontalAlignment="Left" Margin="1202,405,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Ch5Button_Click"/>
        <Label Content="5V2" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="1151,402,0,0" VerticalAlignment="Top" Width="51" Height="32" RenderTransformOrigin="0.201,0.625"/>
        <Button x:Name="ch6Button" Content="ON" HorizontalAlignment="Left" Margin="1202,483,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="Ch6Button_Click"/>
        <Label Content="5V3" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="1151,480,0,0" VerticalAlignment="Top" Width="51" Height="32" RenderTransformOrigin="0.816,0.469"/>

        <Button x:Name="qhButton" Content="ON" HorizontalAlignment="Left" Margin="1234,709,0,-12" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="QhButton_Click"/>
        <Label Content="QH" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="1173,706,0,-18" VerticalAlignment="Top" Width="51" Height="32"/>
        <Label Content="PV1" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="196,47,0,0" VerticalAlignment="Top" Width="51" Height="32"/>
        <Label Content="PV2" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="196,165,0,0" VerticalAlignment="Top" Width="51" Height="32" RenderTransformOrigin="0.522,1.619"/>
        <Label Content="PV3" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="196,279,0,0" VerticalAlignment="Top" Width="51" Height="32" RenderTransformOrigin="0.522,1.619"/>
        <TextBlock x:Name="ch1CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="58" Margin="1312,121,-26,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding CurrentOut, Mode=TwoWay, StringFormat=\{0\} mA, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock x:Name="ch2CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="58" Margin="1312,202,-26,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding CurrentOut, Mode=TwoWay, StringFormat=\{0\} mA, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock x:Name="ch3CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="58" Margin="1312,281,-26,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding CurrentOut, Mode=TwoWay, StringFormat=\{0\} mA, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock x:Name="ch4CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="58" Margin="1312,361,-26,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding CurrentOut, Mode=TwoWay, StringFormat=\{0\} mA, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock x:Name="ch5CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="58" Margin="1312,438,-26,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding CurrentOut, Mode=TwoWay, StringFormat=\{0\} mA, UpdateSourceTrigger=PropertyChanged}" />
        <TextBlock x:Name="ch6CurrOutText" HorizontalAlignment="Left" VerticalAlignment="Top" Height="20" Width="58" Margin="1312,515,-26,0" TextWrapping="Wrap" Style="{StaticResource myCurrentStyle}" Text="{Binding CurrentOut, Mode=TwoWay, StringFormat=\{0\} mA, UpdateSourceTrigger=PropertyChanged}" />
        <Border x:Name="battHeatBorder" BorderThickness="3" HorizontalAlignment="Left" Height="91" Margin="502,58,0,0" VerticalAlignment="Top" Width="193" BorderBrush="{Binding Path=Status, Converter={StaticResource HeatBorderConverter}}"/>
        <Ellipse x:Name="ch1Light" HorizontalAlignment="Left" Height="20" Margin="1257,87,0,0"  VerticalAlignment="Top" Width="20" Fill="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" />
        <Ellipse x:Name="ch2Light" HorizontalAlignment="Left" Height="20" Margin="1257,168,0,0"  VerticalAlignment="Top" Width="20" Fill="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" />
        <Ellipse x:Name="ch3Light" HorizontalAlignment="Left" Height="20" Margin="1257,247,0,0"  VerticalAlignment="Top" Width="20" Fill="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" />
        <Ellipse x:Name="ch4Light" HorizontalAlignment="Left" Height="20" Margin="1257,327,0,0"  VerticalAlignment="Top" Width="20" Fill="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" RenderTransformOrigin="-0.447,0.587" />
        <Ellipse x:Name="ch5Light" HorizontalAlignment="Left" Height="20" Margin="1257,405,0,0"  VerticalAlignment="Top" Width="20" Fill="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" />
        <Ellipse x:Name="ch6Light" HorizontalAlignment="Left" Height="20" Margin="1257,483,0,0"  VerticalAlignment="Top" Width="20" Fill="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" RenderTransformOrigin="0.62,3.06" />
        <Ellipse x:Name="qsLight" HorizontalAlignment="Left" Height="20" Margin="1304,646,-35.2,0"  VerticalAlignment="Top" Width="20" Fill="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" RenderTransformOrigin="0.86,4.54" />
        <Ellipse x:Name="qhLight" HorizontalAlignment="Left" Height="20" Margin="1304,706,-35.2,-6"  VerticalAlignment="Top" Width="20" Fill="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" />
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="151,115,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="151,234,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="151,352,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="388,235,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.848,0.539"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="388,352,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="388,116,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="426,204,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="426,152,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="466,115,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="426,317,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="426,262,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="-90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="717,115,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="845,116,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="897,116,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="889,355,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1133,116,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1182,116,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1234,116,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1283,116,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1055,116,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1096,146,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1096,240,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1096,192,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1055,355,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1133,197,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1179,197,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1227,197,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1274,197,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1133,276,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1179,276,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1227,276,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1274,276,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1133,355,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1179,355,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1227,355,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1274,355,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1096,381,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1096,475,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1096,427,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1133,432,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1179,432,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1227,432,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1274,432,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1133,511,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1179,511,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1227,511,0,0" VerticalAlignment="Top" Width="33"/>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="1274,511,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.479,1.733"/>

        <Expander HorizontalAlignment="Left" Height="Auto" Margin="1133,89,0,0" VerticalAlignment="Top" Width="Auto">
            <Grid x:Name="channel1Grid" HorizontalAlignment="Left" Background="White" Height="52" VerticalAlignment="Top" Width="299">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
                <TextBlock x:Name="ch1VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
                <Label Content="#Latch-up:" Grid.Row="1" Grid.Column="0"/>
                <TextBlock x:Name="ch1LatchupText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=LatchupNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="On Delay:" Grid.Row="0" Grid.Column="2"/>
                <TextBlock x:Name="ch1OnDelText" Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Off Delay:" Grid.Row="1" Grid.Column="2"/>
                <TextBlock x:Name="ch1OffDelText" Grid.Row="1" Grid.Column="3" Text="{Binding OutputInitialOffDelay[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Normal status:" Grid.Row="0" Grid.Column="4"/>
                <TextBlock x:Name="ch1NormalText" Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Safe status:" Grid.Row="1" Grid.Column="4"/>
                <TextBlock x:Name="ch1SafeText" Grid.Row="1" Grid.Column="5" Text="{Binding OutputSafeValue[0], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Expander HorizontalAlignment="Left" Height="Auto" Margin="1133,168,0,0" VerticalAlignment="Top" Width="Auto">
            <Grid x:Name="channel2Grid" HorizontalAlignment="Left" Background="White" Height="55" VerticalAlignment="Top" Width="293">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
                <TextBlock x:Name="ch2VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
                <Label Content="#Latch-up:" Grid.Row="1" Grid.Column="0"/>
                <TextBlock x:Name="ch2LatchupText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=LatchupNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="On Delay:" Grid.Row="0" Grid.Column="2"/>
                <TextBlock x:Name="ch2OnDelText" Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Off Delay:" Grid.Row="1" Grid.Column="2"/>
                <TextBlock x:Name="ch2OffDelText" Grid.Row="1" Grid.Column="3" Text="{Binding OutputInitialOffDelay[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Normal status:" Grid.Row="0" Grid.Column="4"/>
                <TextBlock x:Name="ch2NormalText" Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Safe status:" Grid.Row="1" Grid.Column="4"/>
                <TextBlock x:Name="ch2SafeText" Grid.Row="1" Grid.Column="5" Text="{Binding OutputSafeValue[1], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Expander HorizontalAlignment="Left" Height="Auto" Margin="1133,248,0,0" VerticalAlignment="Top" Width="Auto">
            <Grid x:Name="channel3Grid" HorizontalAlignment="Left" Background="White" Height="54" VerticalAlignment="Top" Width="209">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
                <TextBlock x:Name="ch3VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
                <Label Content="#Latch-up:" Grid.Row="1" Grid.Column="0"/>
                <TextBlock x:Name="ch3LatchupText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=LatchupNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="On Delay:" Grid.Row="0" Grid.Column="2"/>
                <TextBlock x:Name="ch3OnDelText" Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Off Delay:" Grid.Row="1" Grid.Column="2"/>
                <TextBlock x:Name="ch3OffDelText" Grid.Row="1" Grid.Column="3" Text="{Binding OutputInitialOffDelay[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Normal status:" Grid.Row="0" Grid.Column="4"/>
                <TextBlock x:Name="ch3NormalText" Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Safe status:" Grid.Row="1" Grid.Column="4"/>
                <TextBlock x:Name="ch3SafeText" Grid.Row="1" Grid.Column="5" Text="{Binding OutputSafeValue[2], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Expander HorizontalAlignment="Left" Height="Auto" Margin="1133,326,0,0" VerticalAlignment="Top" Width="Auto">
            <Grid x:Name="channel4Grid" HorizontalAlignment="Left" Background="White" Height="55" VerticalAlignment="Top" Width="209">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
                <TextBlock x:Name="ch4VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
                <Label Content="#Latch-up:" Grid.Row="1" Grid.Column="0"/>
                <TextBlock x:Name="ch4LatchupText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=LatchupNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="On Delay:" Grid.Row="0" Grid.Column="2"/>
                <TextBlock x:Name="ch4OnDelText" Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Off Delay:" Grid.Row="1" Grid.Column="2"/>
                <TextBlock x:Name="ch4OffDelText" Grid.Row="1" Grid.Column="3" Text="{Binding OutputInitialOffDelay[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Normal status:" Grid.Row="0" Grid.Column="4"/>
                <TextBlock x:Name="ch4NormalText" Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Safe status:" Grid.Row="1" Grid.Column="4"/>
                <TextBlock x:Name="ch4SafeText" Grid.Row="1" Grid.Column="5" Text="{Binding OutputSafeValue[3], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Expander HorizontalAlignment="Left" Height="Auto" Margin="1133,406,0,0" VerticalAlignment="Top" Width="Auto">
            <Grid x:Name="channel5Grid" HorizontalAlignment="Left" Background="White" Height="53" VerticalAlignment="Top" Width="209">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
                <TextBlock x:Name="ch5VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
                <Label Content="#Latch-up:" Grid.Row="1" Grid.Column="0"/>
                <TextBlock x:Name="ch5LatchupText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=LatchupNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="On Delay:" Grid.Row="0" Grid.Column="2"/>
                <TextBlock x:Name="ch5OnDelText" Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Off Delay:" Grid.Row="1" Grid.Column="2"/>
                <TextBlock x:Name="ch5OffDelText" Grid.Row="1" Grid.Column="3" Text="{Binding OutputInitialOffDelay[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Normal status:" Grid.Row="0" Grid.Column="4"/>
                <TextBlock x:Name="ch5NormalText" Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Safe status:" Grid.Row="1" Grid.Column="4"/>
                <TextBlock x:Name="ch5SafeText" Grid.Row="1" Grid.Column="5" Text="{Binding OutputSafeValue[4], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Expander HorizontalAlignment="Left" Height="Auto" Margin="1133,485,0,0" VerticalAlignment="Top" Width="Auto">
            <Grid x:Name="channel6Grid" HorizontalAlignment="Left" Background="White" Height="55" VerticalAlignment="Top" Width="209">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
                <TextBlock x:Name="ch6VoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Path=Volt, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} mV}"/>
                <Label Content="#Latch-up:" Grid.Row="1" Grid.Column="0"/>
                <TextBlock x:Name="ch6LatchupText" Grid.Row="1" Grid.Column="1" Text="{Binding Path=LatchupNum, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="On Delay:" Grid.Row="0" Grid.Column="2"/>
                <TextBlock x:Name="ch6OnDelText" Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[5], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Off Delay:" Grid.Row="1" Grid.Column="2"/>
                <TextBlock x:Name="ch6OffDelText" Grid.Row="1" Grid.Column="3" Text="{Binding OutputInitialOffDelay[5], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Normal status:" Grid.Row="0" Grid.Column="4"/>
                <TextBlock x:Name="ch6NormalText" Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[5], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Safe status:" Grid.Row="1" Grid.Column="4"/>
                <TextBlock x:Name="ch6SafeText" Grid.Row="1" Grid.Column="5" Text="{Binding OutputSafeValue[5], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Expander HorizontalAlignment="Left" Height="Auto" Margin="1133,654,0,0" VerticalAlignment="Top" Width="Auto">
            <Grid x:Name="channelQSGrid" HorizontalAlignment="Left" Background="White" Height="54" VerticalAlignment="Top" Width="269">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
                <TextBlock x:Name="qsVoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Volt, Mode=TwoWay, StringFormat=\{0\} mV, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="On Delay:" Grid.Row="0" Grid.Column="2"/>
                <TextBlock x:Name="qsOnDelText" Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[6], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Off Delay:" Grid.Row="1" Grid.Column="2"/>
                <TextBlock x:Name="qsOffDelText" Grid.Row="1" Grid.Column="3" Text="{Binding OutputInitialOffDelay[6], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Normal status:" Grid.Row="0" Grid.Column="4"/>
                <TextBlock x:Name="qsNormalText" Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[6], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Safe status:" Grid.Row="1" Grid.Column="4"/>
                <TextBlock x:Name="qsSafeText" Grid.Row="1" Grid.Column="5" Text="{Binding OutputSafeValue[6], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Button x:Name="qsButton" Content="ON" HorizontalAlignment="Left" Margin="1234,652,0,0" VerticalAlignment="Top" Width="50" RenderTransformOrigin="0.112,0.615" Click="QsButton_Click"/>
        <Label Content="QS" FontSize="14" Foreground="White" HorizontalAlignment="Left" Margin="1173,646,0,0" VerticalAlignment="Top" Width="51" Height="32"/>
        <Expander HorizontalAlignment="Left" Height="Auto" Margin="1133,710,0,-13.2" VerticalAlignment="Top" Width="Auto">
            <Grid x:Name="channelQHGrid" HorizontalAlignment="Left" Background="White" Height="25" VerticalAlignment="Top" Width="209">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <Label Content="Voltage:" Grid.Row="0" Grid.Column="0"/>
                <TextBlock x:Name="qhVoltText" Grid.Row="0" Grid.Column="1" Text="{Binding Volt, Mode=TwoWay, StringFormat=\{0\} mV, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="On Delay:" Grid.Row="0" Grid.Column="2"/>
                <TextBlock x:Name="qhOnDelText" Grid.Row="0" Grid.Column="3" Text="{Binding OutputInitialOnDelay[7], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Off Delay:" Grid.Row="1" Grid.Column="2"/>
                <TextBlock x:Name="qhOffDelText" Grid.Row="1" Grid.Column="3" Text="{Binding OutputInitialOffDelay[7], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, StringFormat={}{0} sec}"/>
                <Label Content="Normal status:" Grid.Row="0" Grid.Column="4"/>
                <TextBlock x:Name="qhNormalText" Grid.Row="0" Grid.Column="5" Text="{Binding OutputNormalValue[7], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                <Label Content="Safe status:" Grid.Row="1" Grid.Column="4"/>
                <TextBlock x:Name="qhSafeText" Grid.Row="1" Grid.Column="5" Text="{Binding OutputSafeValue[7], Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
            </Grid>
        </Expander>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="868,204,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="868,150,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="868,315,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>
        <Image Source="Images/arrow.png" HorizontalAlignment="Left" Height="33" Margin="868,263,0,0" VerticalAlignment="Top" Width="33" RenderTransformOrigin="0.5,0.5">
            <Image.RenderTransform>
                <TransformGroup>
                    <ScaleTransform/>
                    <SkewTransform/>
                    <RotateTransform Angle="90"/>
                    <TranslateTransform/>
                </TransformGroup>
            </Image.RenderTransform>
        </Image>




        <!--<Ellipse.Fill>
                <RadialGradientBrush>
                    <GradientStop Color="#FFF4F4F4" Offset="0.237"/>
                    <GradientStop Color="{Binding Path=Status, Converter={StaticResource ChannelLightConverter}}" Offset="0.783"/>
                    "#FF308B0D"
                </RadialGradientBrush>
            </Ellipse.Fill>
            <Ellipse.Effect>
                <DropShadowEffect/>
            </Ellipse.Effect> -->

    </Grid>
</UserControl>